# -*- coding: utf-8 -*-
"""Model_deployment_Streamlit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dGAtCspVnnC6eX13sOh86C634FouoImW
"""

import numpy as np
import pickle
import streamlit as st

# loading the saved model
loaded_model = pickle.load(open('trained_model.sav', 'rb'))

sex = ['Male', 'Female']
geograph = ['Los Angeles', 'New York', 'Miami', 'Chicago', 'Houston']

# creating a function for Prediction

def churn_prediction(input_data):


    # changing the input_data to numpy array
    input_data_as_numpy_array = np.asarray(input_data)

    # reshape the array as we are predicting for one instance
    input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

    prediction = loaded_model.predict(input_data_reshaped)
    print(prediction)

    if (prediction[0] == 0):
      return 'Customer not churn'
    else:
      return 'Customer churn'

def main():


    # giving a title
    st.title('customer churn Prediction Web App')


    # getting the input data from the user


    CustomerID = st.text_input('CustomerID')
    Name = st.text_input('Name')
    Age = st.number_input('Age')
    Gender = st.text_input('Gender')
    Location = st.text_input('Location')
    Subscription_Length_Months = st.number_input('Subscription Length Months')
    Monthly_Bill = st.number_input('Monthly Bill')
    Total_Usage_GB = st.number_input('Total Usage GB')


    # Gender = sex.index(Gender)
    # Location = geograph.index(Location)

    # code for Prediction
    churn = ''

    # creating a button for Prediction

    if st.button('churn Test Result'):
        churn = churn_prediction([Age, sex.index(Gender), geograph.index(Location), Subscription_Length_Months, Monthly_Bill, Total_Usage_GB])


    st.success(churn)

if __name__ == '__main__':
    main()